---
// src/components/HeroSection.astro

export interface Props {
  images?: string[];
}

const defaultImages = [
  "/Tourism sector.png", // A landscape-oriented image
  "/Textile sector.png", // A portrait-oriented image
  "/defense sector.png", // Another landscape image
];

const { images = defaultImages } = Astro.props;
---

<section class="relative flex overflow-hidden h-[91vh]">
  <div class="absolute inset-0 z-[-1]">
    {
      images.map((src, index) => (
        <img
          src={src}
          alt={`Background slide ${index + 1}`}
          class:list={[
            "bg-slide absolute inset-0 w-full h-full object-cover transition-opacity duration-1000 ease-in-out",
            index === 0 ? "opacity-100" : "opacity-0",
          ]}
        />
      ))
    }
    <!-- Add a dark overlay to make text more readable -->
    <div class="absolute inset-0 bg-black/60"></div>
  </div>
  <div
    class="relative flex justify-center items-center z-10 w-full h-full mx-auto px-6"
  >
    <div
      class="max-w-2xl text-center"
      style="font-family: 'Poppins', sans-serif;"
    >
      <h1 class="text-4xl font-bold text-white md:text-5xl lg:text-6xl leading-tight">
  Shaping the future of&nbsp;
  <span class="inline-block h-12 md:h-16 lg:h-20 text-blue-400 overflow-hidden relative align-center">
  <ul class="vertical-slider text-primary ">
    <li>Infrastructure</li>
    <li><center>Industry</center></li>
    <li>Sustainability</li>
    <li>Development</li>
    <li aria-hidden="true">Infrastructure</li> <!-- for seamless loop -->
  </ul>
</span>
</h1>

      <p class="mt-6 text-gray-200 text-lg">
        Empowering progress through expert Project Management & EPC solutions.
      </p>
      <button class="mt-8 bg-blue-600 hover:bg-blue-800 text-white px-6 py-3 rounded-md font-medium transition-transform transform"
      > <a href="#Casestudies">
        Discover Our Projects
      </a></button>
    </div>
  </div>
</section>

<!-- 3. The JavaScript to power the slider -->
<script>
  // A good practice: wrap the logic in a function to avoid polluting the global scope
  function setupImageSlider() {
    // Select all the images with the .bg-slide class
    const slides = document.querySelectorAll(".bg-slide");

    // If there's only one slide (or none), no need to run the interval
    if (slides.length <= 1) {
      return;
    }

    let currentIndex = 0;

    function showNextSlide() {
      // Hide the current slide with a fade-out effect
      slides[currentIndex].classList.remove("opacity-100");
      slides[currentIndex].classList.add("opacity-0");

      // Calculate the index of the next slide, looping back to 0
      currentIndex = (currentIndex + 1) % slides.length;

      // Show the next slide with a fade-in effect
      slides[currentIndex].classList.remove("opacity-0");
      slides[currentIndex].classList.add("opacity-100");
    }

    // Change slide every 5 seconds (5000 milliseconds)
    const slideInterval = setInterval(showNextSlide, 5000);
  }

  // Run the slider setup
  setupImageSlider();
</script>

<style is:global>
  /* Keyframes for smooth horizontal sliding */
  @keyframes slide-vertical {
  0%   { transform: translateY(0%); }
  20%  { transform: translateY(-100%); }
  40%  { transform: translateY(-200%); }
  60%  { transform: translateY(-300%); }
  80%  { transform: translateY(-400%); }
  100% { transform: translateY(-500%); }
}

.animate-slide-vertical {
  display: inline-block;
  animation: slide-vertical 10s ease-in-out infinite;
  line-height: 1.2;
}
.vertical-slider {
  display: flex;
  flex-direction: column;
  animation: slideWords 8s ease-in-out infinite;
}

  .vertical-slider li {
    /* Set a base height, but it will be overridden by responsive styles */
    height: 3rem; /* 48px, matches h-12 */
    display: flex;
    align-items: center;
    justify-content: start;
  }
  
  /* Use media queries to match Tailwind's breakpoints */
  @media (min-width: 768px) { /* md */
    .vertical-slider li {
      height: 4rem; /* 64px, matches md:h-16 */
    }
  }
  
  @media (min-width: 1024px) { /* lg */
    .vertical-slider li {
      height: 5rem; /* 80px, matches lg:h-20 */
    }
  }

  /* The animation keyframes must also use these responsive heights */
  @keyframes slideWords {
    0%, 20% { transform: translateY(0); }

    25%, 45% { transform: translateY(-3rem); }   /* Base height */
    50%, 70% { transform: translateY(-6rem); }
    75%, 95% { transform: translateY(-9rem); }
    100%     { transform: translateY(-12rem); }
  }

  @media (min-width: 768px) { /* md */
    @keyframes slideWords {
      0%, 20% { transform: translateY(0); }

      25%, 45% { transform: translateY(-4rem); } /* md height */
      50%, 70% { transform: translateY(-8rem); }
      75%, 95% { transform: translateY(-12rem); }
      100%     { transform: translateY(-16rem); }
    }
  }

  @media (min-width: 1024px) { /* lg */
    @keyframes slideWords {
      0%, 20% { transform: translateY(0); }

      25%, 45% { transform: translateY(-5rem); } /* lg height */
      50%, 70% { transform: translateY(-10rem); }
      75%, 95% { transform: translateY(-15rem); }
      100%     { transform: translateY(-20rem); }
    }
  }

</style>

